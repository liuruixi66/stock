from xg_tdx_func.xg_tdx_func import *
from trader_tool.unification_data import unification_data
class dingniu_periodic_resonance_master_diagram:
    def __init__(self,df) :
        '''
        鼎牛周期共振主图
        '''
        self.df=df
    def dingniu_periodic_resonance_master_diagram(self):
        '''
        ACB1赋值:收盘价的12日指数移动平均-收盘价的26日指数移动平均
        ACB2赋值:ACB1的9日指数移动平均
        ACB3赋值:ACB1>ACB2
        ACB4赋值:(收盘价-12日内最低价的最低值)/(12日内最高价的最高值-12日内最低价的最低值)*100
        ACB5赋值:ACB4的3日[1日权重]移动平均
        ACB6赋值:ACB5的3日[1日权重]移动平均
        ACB7赋值:ACB5>ACB6
        ACB8赋值:1日前的收盘价
        ACB9赋值:收盘价-ACB8和0的较大值的9日[1日权重]移动平均/收盘价-ACB8的绝对值的9日[1日权重]移动平均*100
        ACB10赋值:收盘价-ACB8和0的较大值的26日[1日权重]移动平均/收盘价-ACB8的绝对值的26日[1日权重]移动平均*100
        ACB11赋值:ACB9>ACB10
        ACB12赋值:ACB4的3日[1日权重]移动平均
        ACB13赋值:ACB12的3日[1日权重]移动平均
        ACB14赋值:ACB12>ACB13
        ACB15赋值:(收盘价的3日简单移动平均+收盘价的9日简单移动平均+收盘价的12日简单移动平均+收盘价的26日简单移动平均)/4
        ACB16赋值:收盘价>ACB15
        ACB17赋值:收盘价-1日前的收盘价
        ACB18赋值:100*ACB17的9日指数移动平均的9日指数移动平均/ACB17的绝对值的9日指数移动平均的3日指数移动平均
        ACB19赋值:100*ACB17的26日指数移动平均的12日指数移动平均/ACB17的绝对值的26日指数移动平均的12日指数移动平均
        ACB20赋值:ACB18>ACB19
        ACB21赋值:以0.9为权重(最高价+最低价+收盘价*2)/4的动态移动平均
        ACB22赋值:1日前的ACB21的3日指数移动平均
        ACB23赋值:成交量(手)/((最高价-最低价)*2-收盘价-开盘价的绝对值)
        ACB24赋值:如果收阳线,返回ACB23*(最高价-最低价),否则返回如果收阴线,返回ACB23*(最高价-开盘价+收盘价-最低价),否则返回成交量(手)/2+如果收阳线,返回0-ACB23*(最高价-收盘价+开盘价-最低价),否则返回如果收阴线,返回0-ACB23*(最高价-最低价),否则返回0-成交量(手)/2
        ACB25赋值:ACB24/20/1.15
        ACB26赋值:ACB25*0.55+1日前的ACB25*0.33+2日前的ACB25*0.22
        ACB27赋值:ACB26的8日指数移动平均
        ACB28赋值:ACB26的3日指数移动平均
        ACB29赋值:ACB28
        ACB30赋值:成交量(手)
        ACB31赋值:ACB30的5日简单移动平均
        ACB32赋值:ACB30的10日简单移动平均
        ACB33赋值:ACB31>=ACB32
        ACB34赋值:ACB29>=0
        ACB35赋值:ACB34 AND ACB33
        当满足条件ACB35时,在最低价位置画1号图标
        ACB36赋值:KDJ的K(9,3,3)的5日简单移动平均
        ACB37赋值:收盘价的12/2日指数移动平均-收盘价的26/2日指数移动平均
        ACB38赋值:ACB37的9/2日指数移动平均
        ACB39赋值:ACB36>=1日前的ACB36 AND ACB37>=ACB38
        ABC51赋值:(最高价+最低价+收盘价*2)/4
        ABC52赋值:ABC51的17日指数移动平均
        ABC53赋值:ABC51的17日估算标准差
        ABC54赋值:((ABC51-ABC52)/ABC53*100+200)/4
        ABC55赋值:(ABC54的5日指数移动平均-25)*1.56
        ABC56赋值:ABC55的2日指数移动平均*1.22
        ABC57赋值:ABC56的2日指数移动平均
        当满足条件ABC56-ABC57>0时,在开盘价和收盘价位置之间画柱状线,宽度为3,1不为0则画空心柱.,画红色
        当满足条件ABC56-ABC57<0时,在开盘价和收盘价位置之间画柱状线,宽度为3,0不为0则画空心柱.,画绿色
        当满足条件ABC56-ABC57>0ANDREF(ABC56-ABC57<0,1)时,在开盘价和收盘价位置之间画柱状线,宽度为1,0不为0则画空心柱.,画黄色
        当满足条件ABC56-ABC57>0ANDABC56-ABC57<1日前的ABC56-ABC57ANDABC57>110时,在开盘价和收盘价位置之间画柱状线,宽度为3,0不为0则画空心柱.,画淡红色
        涨停赋值:如果(收盘价-1日前的收盘价)*100/1日前的收盘价>=9.80,返回1,否则返回0
        涨停牛赋值:最近2日一直存在涨停
        当满足条件涨停牛时,在最低价*1.02位置书写文字,画黄色
        输出操作线:收盘价的5日简单移动平均,COLORFFFFFF,线宽为1
        输出趋势线:收盘价的10日简单移动平均,画红色,线宽为1
        画带状线
        AA赋值:收盘价>收盘价的10日简单移动平均
        MA5赋值:收盘价的5日简单移动平均
        MA10赋值:收盘价的10日简单移动平均
        多头排列赋值:MA5>MA10
        当满足条件ACB35时,在开盘价和收盘价位置之间画柱状线,宽度为2,0不为0则画空心柱.,画洋红色
        当满足条件涨停牛时,在开盘价和收盘价位置之间画柱状线,宽度为1,0不为0则画空心柱.,画黄色
        共振赋值:条件连续成立次数=1
        当满足条件共振时,在最低价位置书写文字,画黄色
        当满足条件共振时,在最低价位置画9号图标
        '''
        df=self.df
        CLOSE=df['close']
        C=df['close']
        LOW=df['low']
        L=df['low']
        HIGH=df['high']
        H=df['high']
        OPEN=df['open']
        O=df['open']
        volume=df['volume']
        VOL=df['volume']
        V=df['volume']
        ACB1=EMA(CLOSE,12)-EMA(CLOSE,26)
        ACB2=EMA(ACB1,9)
        ACB3=ACB1>ACB2
        ACB4=(CLOSE-LLV(LOW,12))/(HHV(HIGH,12)-LLV(LOW,12))*100
        ACB5=SMA(ACB4,3,1)
        ACB6=SMA(ACB5,3,1)
        ACB7=ACB5>ACB6
        ACB8=REF(CLOSE,1)
        ACB9=SMA(MAX(CLOSE-ACB8,0),9,1)/SMA(ABS(CLOSE-ACB8),9,1)*100
        ACB10=SMA(MAX(CLOSE-ACB8,0),26,1)/SMA(ABS(CLOSE-ACB8),26,1)*100
        ACB11=ACB9>ACB10
        ACB12=SMA(ACB4,3,1)
        ACB13=SMA(ACB12,3,1)
        ACB14=ACB12>ACB13
        ACB15=(MA(CLOSE,3)+MA(CLOSE,9)+MA(CLOSE,12)+MA(CLOSE,26))/4
        ACB16=CLOSE>ACB15
        ACB17=CLOSE-REF(CLOSE,1)
        ACB18=100*EMA(EMA(ACB17,9),9)/EMA(EMA(ABS(ACB17),9),3)
        ACB19=100*EMA(EMA(ACB17,26),12)/EMA(EMA(ABS(ACB17),26),12)
        ACB20=ACB18>ACB19
        ACB21=DMA((HIGH+LOW+CLOSE*2)/4,0.9)
        ACB22=REF(EMA(ACB21,3),1)
        ACB23=VOL/((HIGH-LOW)*2-ABS(CLOSE-OPEN))
        ACB24=IF(CLOSE>OPEN,ACB23*(HIGH-LOW),IF(CLOSE< OPEN,ACB23*(HIGH-OPEN+CLOSE-LOW),VOL/2))+IF(CLOSE>OPEN,0-ACB23*(HIGH-CLOSE+OPEN-LOW),IF(CLOSE< OPEN,0-ACB23*(HIGH-LOW),0-VOL/2))
        ACB25=ACB24/20/1.15
        ACB26=ACB25*0.55+REF(ACB25,1)*0.33+REF(ACB25,2)*0.22
        ACB27=EMA(ACB26,8)
        ACB28=EMA(ACB26,3)
        ACB29=ACB28
        ACB30=VOL
        ACB31=MA(ACB30,5)
        ACB32=MA(ACB30,10)
        ACB33=ACB31>=ACB32
        ACB34=ACB29>=0
        ACB35=AND(ACB34,ACB33)
        #标记箭头
        #DRAWICON(ACB35,L,1)
        ACB36=MA(KDJ(CLOSE=CLOSE,LOW=LOW,HIGH=HIGH)[0],5)
        ACB37=EMA(CLOSE,12/2)-EMA(CLOSE,26/2)
        ACB38=EMA(ACB37,9/2)
        ACB39=AND(ACB36>=REF(ACB36,1),ACB37>=ACB38)
        ABC51=(HIGH+LOW+CLOSE*2)/4
        ABC52=EMA(ABC51,17)
        ABC53=STD(ABC51,17)
        ABC54=((ABC51-ABC52)/ABC53*100+200)/4
        ABC55=(EMA(ABC54,5)-25)*1.56
        ABC56=EMA(ABC55,2)*1.22
        ABC57=EMA(ABC56,2)
        #STICKLINE(ABC56-ABC57>0,O,C,3,1),COLORRED
        df['红色柱子']=ABC56-ABC57>0
        #STICKLINE(ABC56-ABC57<0,O,C,3,0),COLORGREEN;
        df['绿色柱子']=ABC56-ABC57<0
        #STICKLINE(ABC56-ABC57>0 AND REF(ABC56-ABC57< 0,1),O,C,1,0),COLORYELLOW;
        df['黄色柱子']=AND(ABC56-ABC57>0,REF(ABC56-ABC57< 0,1))
        #STICKLINE(ABC56-ABC57>0 AND ABC56-ABC57< REF(ABC56-ABC57,1) AND ABC57>110,O,C,3,0),COLORLIRED;
        df['淡红色柱子']=AND(ABC56-ABC57>0,AND(ABC56-ABC57< REF(ABC56-ABC57,1),ABC57>110))
        涨停=IF((C-REF(C,1))*100/REF(C,1)>=9.80,1,0)
        df['涨停']=涨停
        涨停牛=EVERY(涨停,2)
        #DRAWTEXT(涨停牛,L*1.02,'↙牛'),COLORYELLOW;
        df['涨停牛']=涨停牛
        操作线=MA(CLOSE,5)
        趋势线=MA(CLOSE,10)
        #DRAWBAND(操作线,RGB(255,50,50),趋势线,RGB(10,204,60));
        df['条形线']=IF(操作线>=趋势线,'红色','绿色')
        AA=C>MA(C,10); 
        MA5=MA(C,5)
        MA10=MA(C,10)
        多头排列=MA5>MA10
        #STICKLINE(ACB35,O,C,2,0),COLORMAGENTA;
        #STICKLINE(涨停牛,OPEN,CLOSE,1,0),COLORYELLOW;
        共振=BARSLASTCOUNT(AND(ABC56-ABC57>0,AND(多头排列,AA)))==1
        df['共振']=共振
        #DRAWTEXT(共振,L,'★共振'),COLORYELLOW;  
        #DRAWICON(共振,L,9);
        return df
if __name__=='__main__':
    data=unification_data(trader_tool='ths')
    data=data.get_unification_data()
    df=data.get_hist_data_em(stock='159632',start_date='19990101')
    print(df)
    modes=dingniu_periodic_resonance_master_diagram(df=df)
    result=modes.dingniu_periodic_resonance_master_diagram()
    print(result)
    result.to_excel(r'数据.xlsx')
   